{"ast":null,"code":"import _objectSpread from\"C:/Users/Asus/Desktop/SAAS-NOTES-APP-SETUP/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useAuth}from'../../contexts/AuthContext';import{supabase}from'../../lib/supabase';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SignupForm=_ref=>{let{onSwitchToLogin}=_ref;const[userType,setUserType]=useState('tenant');// 'tenant' or 'user'\nconst[formData,setFormData]=useState({name:'',email:'',password:'',confirmPassword:'',companyName:'',phone:'',selectedTenantId:''});const[error,setError]=useState('');const[isLoading,setIsLoading]=useState(false);const[availableTenants,setAvailableTenants]=useState([]);const[loadingTenants,setLoadingTenants]=useState(false);const{signup}=useAuth();// Fetch available tenants when user type is 'user'\nuseEffect(()=>{if(userType==='user'){fetchAvailableTenants();}},[userType]);const fetchAvailableTenants=async()=>{setLoadingTenants(true);try{const{data,error}=await supabase.from('tenants').select('id, company_name, company_email').order('company_name');if(error){console.error('Error fetching tenants:',error);setError('Failed to load available companies');}else{setAvailableTenants(data||[]);}}catch(error){console.error('Error fetching tenants:',error);setError('Failed to load available companies');}finally{setLoadingTenants(false);}};const handleChange=e=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[e.target.name]:e.target.value}));setError('');};const handleUserTypeChange=type=>{setUserType(type);setError('');// Clear type-specific fields when switching\nif(type==='user'){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{companyName:'',phone:'',selectedTenantId:''}));}else if(type==='companyless'){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{companyName:'',phone:'',selectedTenantId:''}));}else{// Clear tenant selection when switching to tenant\nsetFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedTenantId:''}));}};const validateForm=()=>{if(!formData.name||!formData.email||!formData.password||!formData.confirmPassword){return'Please fill in all required fields';}if(formData.password!==formData.confirmPassword){return'Passwords do not match';}if(formData.password.length<6){return'Password must be at least 6 characters long';}if(userType==='tenant'&&!formData.companyName){return'Company name is required for tenant accounts';}if(userType==='user'&&!formData.selectedTenantId){return'Please select a company to join';}// No additional validation needed for companyless users\nreturn null;};const handleSubmit=async e=>{e.preventDefault();setIsLoading(true);setError('');const validationError=validateForm();if(validationError){setError(validationError);setIsLoading(false);return;}const result=await signup(formData,userType);if(!result.success){setError(result.error);}else{// Show success message for email verification\nsetError('Please check your email to verify your account before signing in.');}setIsLoading(false);};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create Account\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Join our platform today\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-type-selector\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"type-button \".concat(userType==='tenant'?'active':''),onClick:()=>handleUserTypeChange('tenant'),children:\"Company Admin\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"type-button \".concat(userType==='user'?'active':''),onClick:()=>handleUserTypeChange('user'),children:\"Join Company\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"type-button \".concat(userType==='companyless'?'active':''),onClick:()=>handleUserTypeChange('companyless'),children:\"Individual User\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"auth-form\",children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(error.includes('check your email')?'success-message':'error-message'),children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Full Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleChange,placeholder:\"Enter your full name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email Address *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Enter your email\",required:true})]}),userType==='tenant'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"companyName\",children:\"Company Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"companyName\",name:\"companyName\",value:formData.companyName,onChange:handleChange,placeholder:\"Enter your company name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone\",children:\"Phone Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"phone\",name:\"phone\",value:formData.phone,onChange:handleChange,placeholder:\"Enter your phone number\"})]})]}),userType==='user'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"selectedTenantId\",children:\"Select Company *\"}),loadingTenants?/*#__PURE__*/_jsx(\"div\",{style:{padding:'10px',textAlign:'center',color:'#666'},children:\"Loading companies...\"}):/*#__PURE__*/_jsxs(\"select\",{id:\"selectedTenantId\",name:\"selectedTenantId\",value:formData.selectedTenantId,onChange:handleChange,required:true,style:{width:'100%',padding:'12px',border:'1px solid #ddd',borderRadius:'4px',fontSize:'16px',backgroundColor:'white'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choose a company to join...\"}),availableTenants.map(tenant=>/*#__PURE__*/_jsxs(\"option\",{value:tenant.id,children:[tenant.company_name,\" (\",tenant.company_email,\")\"]},tenant.id))]}),availableTenants.length===0&&!loadingTenants&&/*#__PURE__*/_jsx(\"p\",{style:{color:'#666',fontSize:'14px',marginTop:'5px'},children:\"No companies available. Please contact an administrator or register as a Company Admin.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,placeholder:\"Create a password (min. 6 characters)\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm Password *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange,placeholder:\"Confirm your password\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"auth-button\",disabled:isLoading,children:isLoading?'Creating Account...':\"Create \".concat(userType==='tenant'?'Company':'User',\" Account\")})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-footer\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account?\",' ',/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"link-button\",onClick:onSwitchToLogin,children:\"Sign in here\"})]})})]})});};export default SignupForm;","map":{"version":3,"names":["React","useState","useEffect","useAuth","supabase","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SignupForm","_ref","onSwitchToLogin","userType","setUserType","formData","setFormData","name","email","password","confirmPassword","companyName","phone","selectedTenantId","error","setError","isLoading","setIsLoading","availableTenants","setAvailableTenants","loadingTenants","setLoadingTenants","signup","fetchAvailableTenants","data","from","select","order","console","handleChange","e","_objectSpread","target","value","handleUserTypeChange","type","prev","validateForm","length","handleSubmit","preventDefault","validationError","result","success","className","children","concat","onClick","onSubmit","includes","htmlFor","id","onChange","placeholder","required","style","padding","textAlign","color","width","border","borderRadius","fontSize","backgroundColor","map","tenant","company_name","company_email","marginTop","disabled"],"sources":["C:/Users/Asus/Desktop/SAAS-NOTES-APP-SETUP/src/components/Auth/SignupForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { supabase } from '../../lib/supabase';\n\nconst SignupForm = ({ onSwitchToLogin }) => {\n  const [userType, setUserType] = useState('tenant'); // 'tenant' or 'user'\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    companyName: '',\n    phone: '',\n    selectedTenantId: ''\n  });\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [availableTenants, setAvailableTenants] = useState([]);\n  const [loadingTenants, setLoadingTenants] = useState(false);\n  \n  const { signup } = useAuth();\n\n  // Fetch available tenants when user type is 'user'\n  useEffect(() => {\n    if (userType === 'user') {\n      fetchAvailableTenants();\n    }\n  }, [userType]);\n\n  const fetchAvailableTenants = async () => {\n    setLoadingTenants(true);\n    try {\n      const { data, error } = await supabase\n        .from('tenants')\n        .select('id, company_name, company_email')\n        .order('company_name');\n\n      if (error) {\n        console.error('Error fetching tenants:', error);\n        setError('Failed to load available companies');\n      } else {\n        setAvailableTenants(data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching tenants:', error);\n      setError('Failed to load available companies');\n    } finally {\n      setLoadingTenants(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setError('');\n  };\n\n  const handleUserTypeChange = (type) => {\n    setUserType(type);\n    setError('');\n    // Clear type-specific fields when switching\n    if (type === 'user') {\n      setFormData(prev => ({\n        ...prev,\n        companyName: '',\n        phone: '',\n        selectedTenantId: ''\n      }));\n    } else if (type === 'companyless') {\n      setFormData(prev => ({\n        ...prev,\n        companyName: '',\n        phone: '',\n        selectedTenantId: ''\n      }));\n    } else {\n      // Clear tenant selection when switching to tenant\n      setFormData(prev => ({\n        ...prev,\n        selectedTenantId: ''\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    if (!formData.name || !formData.email || !formData.password || !formData.confirmPassword) {\n      return 'Please fill in all required fields';\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      return 'Passwords do not match';\n    }\n\n    if (formData.password.length < 6) {\n      return 'Password must be at least 6 characters long';\n    }\n\n    if (userType === 'tenant' && !formData.companyName) {\n      return 'Company name is required for tenant accounts';\n    }\n\n    if (userType === 'user' && !formData.selectedTenantId) {\n      return 'Please select a company to join';\n    }\n\n    // No additional validation needed for companyless users\n\n    return null;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n\n    const validationError = validateForm();\n    if (validationError) {\n      setError(validationError);\n      setIsLoading(false);\n      return;\n    }\n\n    const result = await signup(formData, userType);\n    \n    if (!result.success) {\n      setError(result.error);\n    } else {\n      // Show success message for email verification\n      setError('Please check your email to verify your account before signing in.');\n    }\n    \n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <div className=\"auth-header\">\n          <h2>Create Account</h2>\n          <p>Join our platform today</p>\n        </div>\n\n        {/* User Type Selection */}\n        <div className=\"user-type-selector\">\n          <button\n            type=\"button\"\n            className={`type-button ${userType === 'tenant' ? 'active' : ''}`}\n            onClick={() => handleUserTypeChange('tenant')}\n          >\n            Company Admin\n          </button>\n          <button\n            type=\"button\"\n            className={`type-button ${userType === 'user' ? 'active' : ''}`}\n            onClick={() => handleUserTypeChange('user')}\n          >\n            Join Company\n          </button>\n          <button\n            type=\"button\"\n            className={`type-button ${userType === 'companyless' ? 'active' : ''}`}\n            onClick={() => handleUserTypeChange('companyless')}\n          >\n            Individual User\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          {error && (\n            <div className={`message ${error.includes('check your email') ? 'success-message' : 'error-message'}`}>\n              {error}\n            </div>\n          )}\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Full Name *</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              placeholder=\"Enter your full name\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email Address *</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n\n          {userType === 'tenant' && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"companyName\">Company Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"companyName\"\n                  name=\"companyName\"\n                  value={formData.companyName}\n                  onChange={handleChange}\n                  placeholder=\"Enter your company name\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"phone\">Phone Number</label>\n                <input\n                  type=\"tel\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleChange}\n                  placeholder=\"Enter your phone number\"\n                />\n              </div>\n            </>\n          )}\n\n          {userType === 'user' && (\n            <div className=\"form-group\">\n              <label htmlFor=\"selectedTenantId\">Select Company *</label>\n              {loadingTenants ? (\n                <div style={{ padding: '10px', textAlign: 'center', color: '#666' }}>\n                  Loading companies...\n                </div>\n              ) : (\n                <select\n                  id=\"selectedTenantId\"\n                  name=\"selectedTenantId\"\n                  value={formData.selectedTenantId}\n                  onChange={handleChange}\n                  required\n                  style={{\n                    width: '100%',\n                    padding: '12px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    fontSize: '16px',\n                    backgroundColor: 'white'\n                  }}\n                >\n                  <option value=\"\">Choose a company to join...</option>\n                  {availableTenants.map((tenant) => (\n                    <option key={tenant.id} value={tenant.id}>\n                      {tenant.company_name} ({tenant.company_email})\n                    </option>\n                  ))}\n                </select>\n              )}\n              {availableTenants.length === 0 && !loadingTenants && (\n                <p style={{ color: '#666', fontSize: '14px', marginTop: '5px' }}>\n                  No companies available. Please contact an administrator or register as a Company Admin.\n                </p>\n              )}\n            </div>\n          )}\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password *</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"Create a password (min. 6 characters)\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password *</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              placeholder=\"Confirm your password\"\n              required\n            />\n          </div>\n\n          <button \n            type=\"submit\" \n            className=\"auth-button\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Creating Account...' : `Create ${userType === 'tenant' ? 'Company' : 'User'} Account`}\n          </button>\n        </form>\n\n        <div className=\"auth-footer\">\n          <p>\n            Already have an account?{' '}\n            <button \n              type=\"button\" \n              className=\"link-button\"\n              onClick={onSwitchToLogin}\n            >\n              Sign in here\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}